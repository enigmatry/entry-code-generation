@using Enigmatry.Entry.CodeGeneration
@using Enigmatry.Entry.CodeGeneration.Angular
@using Enigmatry.Entry.CodeGeneration.Templates.HtmlHelperExtensions
@using Enigmatry.Entry.CodeGeneration.Templates.HtmlHelperExtensions.Angular
@using Enigmatry.Entry.CodeGeneration.Templates.HtmlHelperExtensions.TypeScript
@model Enigmatry.Entry.CodeGeneration.Configuration.FeatureModule;
@inject CodeGeneratorOptions _options;
import { NgModule } from '@@angular/core';
import { CommonModule } from '@@angular/common';
import { SharedModule } from 'src/app/shared/shared.module';
@if (_options.WithStandaloneComponents)
{
    @:import { StandaloneModule } from 'src/app/shared/standalone.module';
}
import { EntryTableModule } from '@@enigmatry/entry-components/table';
@if (Model.HasFormComponents)
{
    @:import { FormlyModule, FORMLY_CONFIG } from '@@ngx-formly/core';
    @:import { FormlyMaterialModule } from '@@ngx-formly/material';
    @:import { MatAutocompleteModule } from '@@angular/material/autocomplete';
    @:import { FormlyMatDatepickerModule } from '@@ngx-formly/material/datepicker';
}
@Html.ImportModules(Model.Imports)
@Html.ImportComponentsFrom(Model)
@Html.ImportValidators(Model, _options.ValidatorsPath)

@@NgModule({
    declarations: @Html.JsArray(Model.Components, component => component.AngularComponentName()),
    imports: [
    CommonModule,
    SharedModule,
    EntryTableModule,
    @if (Model.HasFormComponents)
    {
        @:MatAutocompleteModule,
        @:FormlyModule.forChild(
        @if (Model.HasCommonValidationMessages)
        {
            @:{
                @:validationMessages: [
                    @Html.AddCommonValidationMessages(Model, true)
                @:]
            @:}
        }
        @:),
        @:FormlyMaterialModule,
        @:FormlyMatDatepickerModule,
    }
    @if (_options.WithStandaloneComponents)
    {
        @:StandaloneModule,
    }
    @if (Model.HasModuleImports)
    {
        @String.Join(',', Model.Imports.Select(m => m.Name))
    }
    ],
    exports: @Html.JsArray(Model.Components, component => component.AngularComponentName()),
    providers: [
    @if (Model.HasFormValidators)
    {
        @Html.AddFromValidationProvider(Model)
    }
    ]
    })
    export class @(Model.Name)GeneratedModule { }
