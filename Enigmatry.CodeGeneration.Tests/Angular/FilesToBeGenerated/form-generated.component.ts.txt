// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------;
import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { FormlyFieldConfig } from '@ngx-formly/core';
import { IFormMock } from 'src/app/api/api-reference';
import { map } from 'rxjs/operators';
import { FormLookupService } from '../services/form-generated-lookup.service';

@Component({
  selector: 'app-g-form',
  templateUrl: './form-generated.component.html',
  styleUrls: ['./form-generated.component.scss']
})
export class FormGeneratedComponent implements OnInit {

  @Input() model: IFormMock = {};

  @Output() save = new EventEmitter<IFormMock>();
  @Output() cancel = new EventEmitter<void>();

  form = new FormGroup({});
  fields: FormlyFieldConfig[] = [];

  constructor(private lookupService: FormLookupService) {
    this.fields = [     {
        key: 'name',
        type: 'input',
        templateOptions: {
          label: 'Name',
          placeholder: 'Name',
          readonly: false,
          description: '',
          hidden: !true
        }
      },
     {
        key: 'description',
        type: 'input',
        templateOptions: {
          label: 'Description',
          placeholder: 'Description',
          readonly: false,
          description: '',
          hidden: !true
        }
      },
     {
        key: 'date',
        type: 'datepicker',
        templateOptions: {
          label: 'Date',
          placeholder: 'Date',
          readonly: false,
          description: '',
          hidden: !true
        }
      },
     {
        key: 'money',
        type: 'input',
        templateOptions: {
          label: 'Money',
          placeholder: 'Money',
          readonly: false,
          description: '',
          hidden: !true
        }
      },
     {
        key: 'status',
        type: 'select',
        templateOptions: {
          label: 'Status',
          placeholder: 'Status',
          readonly: false,
          description: '',
          options: lookupService.getStatus$.pipe(
            map((arr) =>
              arr.map(el => el = {value: el.value, label: el.displayName}))
            ),
          hidden: !true
        }
      },
];
 }

  ngOnInit(): void {
  }

  onSubmit() {
    if (this.form.valid) {
      this.save.emit(this.model);
    }
  }
}
